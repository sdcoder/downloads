@model LightStreamWeb.Models.PreFunding.AccountInformationChangeModel

<section class="row">
<div class="large-12 columns">
<form method="post" action="/appstatus/prefunding/accountinformationchange" 
    novalidate 
    name="AccountInformationChangeForm"
    ls-validate-on-submit="ls-validate-on-submit" 
    name="AccountInformationChangeForm" 
    on-success="onSubmit()"
    ng-controller="AccountInformationChangeController">
    <fieldset ng-disabled="OnFormSuccess">
        <div class="row">
	        <div class="large-12 columns">
                <h2 class="brand">Change Account Information</h2>
            </div>
        </div>
        @if (TempData["ErrorMessage"] != null) {
        <div class="row">
            <div class="medium-12 columns">
                <div class="formalert">
                    <p>@TempData["ErrorMessage"]</p>                    
                </div>
            </div>
        </div>
        }

        <div class="row" ng-cloak ng-show="ErrorMessage">
            <div class="medium-12 columns">
                <div class="formalert">
                    <p>{{ErrorMessage}}</p>                    
                </div>
            </div>
        </div>

        <script type="text/ng-template" id="StepVerify">
            <div class="row">
                <div class="medium-12 columns">
                    <p>Before proceeding, please answer your security question below.</p>
                </div>
            </div>
            <div class="row">
                <div class="medium-6 columns">
                    <label>Security Question</label>
                    @Model.GetSecurityQuestion()
                </div>
            </div>

            <div class="row">
                <div class="medium-6 columns">
                    <label>Security Answer</label>
                    <input type="text" id="SecurityQuestionAnswer" 
                        name="SecurityQuestionAnswer" 
                        ng-model="Model.SecurityQuestionAnswer" 
                        minlength="1"
                        maxlength="50"
                        ng-pattern="/^[A-Za-z0-9@(@"!&$,-._ ")]+$/"
                        ls-restrict-to-pattern
                        ng-disabled="LoanApp.UserCredentials.UserId"
                        ng-focus="securityAnswerGainedFocus = true"
                        required="required" >
                </div>
            </div>

            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding" style="margin: 0">Return to Previous Page</a>
                    <input type="button" class="button button-medium " value="Next" ng-click="validateSecurityInfo()" style="margin: 0 !important"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>
        </script>
        <script type="text/ng-template" id="StepChoose">
            <div class="row">
                <div class="medium-6 columns">
                    <p>Please select one in order to change account information for:</p>

                    <label><input type="radio" name="AccountAction" ng-model="Model.AccountAction" value="StepDeposit" ng-required="true" /> Deposit of loan proceeds</label>
                    <label><input type="radio" name="AccountAction" ng-model="Model.AccountAction" value="StepPayment" ng-required="true" /> Monthly AutoPay payments</label>
                    <label><input type="radio" name="AccountAction" ng-model="Model.AccountAction" value="StepBothSame" ng-required="true" /> Both, using same bank account</label>
                    <label><input type="radio" name="AccountAction" ng-model="Model.AccountAction" value="StepBothDifferent" ng-required="true" /> Both, using different bank accounts</label>

                </div>
            </div>

            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding">Return to Previous Page</a>
                    <input type="button" class="button button-medium " value="Next" ng-click="displayAccountAction()"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>

        </script>
        <script type="text/ng-template" id="StepDeposit">
            <div class="row">
                <div class="medium-12 columns">
                    <p>Enter new account information for deposit of loan proceeds. If you need help locating the routing number or account number on your check, please see example. </p>
                </div>
            </div>

            @Html.Partial("~/Views/ApplicationStatus/_FundingAccount.cshtml", Model, new ViewDataDictionary{ { "ngModelName", "Model" }})

            <div class="row">
                <div class="medium-12 columns inline">
                    <input type="checkbox" name="Acknowledge" id="Acknowledge" ng-model="Acknowledge" required /><label for="Acknowledge">*Acknowledge that you are updating the deposit account and that the debiting account will remain with account number ending in @Model.LastFourDigitsOfDebitAccountNumber</label>
                </div>
            </div>

            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding">Return to Previous Page</a>
                    <input type="submit" class="button button-medium " value="Next" ng-disabled="Waiting"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>

            <div class="row">
                <div class="medium-12 columns inline">
                    <p>*If you would like to update both the deposit account and debiting account, please return to the previous page and select to update both accounts.</p>
                </div>
            </div>

            
        </script>
        <script type="text/ng-template" id="StepPayment">
            <div class="row">
                <div class="medium-12 columns">
                    <p>Enter new account information for monthly AutoPay payments. If you need help locating the routing number or account number on your check, please see example. </p>
                </div>
            </div>

            @Html.Partial("~/Views/ApplicationStatus/PreFunding/_PaymentAccount.cshtml")
            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding">Return to Previous Page</a>
                    <input type="submit" class="button button-medium " value="Next" ng-disabled="Waiting"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>

        </script>
        <script type="text/ng-template" id="StepBothSame">
            <div class="row">
                <div class="medium-12 columns">
                    <p>Enter new account information for deposit of loan proceeds and monthly AutoPay payments. 
                        If you need help locating the routing number or account number on your check, please see example.  </p>
                </div>
            </div>

            @Html.Partial("~/Views/ApplicationStatus/_FundingAccount.cshtml", Model, new ViewDataDictionary{ { "ngModelName", "Model" }})
            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding">Return to Previous Page</a>
                    <input type="submit" class="button button-medium " value="Next" ng-disabled="Waiting"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>

        </script>
        <script type="text/ng-template" id="StepBothDifferent">
            <div class="row">
                <div class="medium-12 columns">
                    <p>Enter new account information for deposit of loan proceeds. If you need help locating the routing number or account number on your check, please see example. </p>
                </div>
            </div>
            @Html.Partial("~/Views/ApplicationStatus/_FundingAccount.cshtml", Model, new ViewDataDictionary{ { "ngModelName", "Model" }})

            <div class="row">
                <div class="medium-12 columns">
                    <p>Enter new account information for monthly AutoPay payments. </p>
                </div>
            </div>
            @Html.Partial("~/Views/ApplicationStatus/PreFunding/_PaymentAccount.cshtml")

            <div class="row">
                <div class="medium-12 columns">
                    <a class="button button-medium button-navy" href="/appstatus/prefunding">Return to Previous Page</a>
                    <input type="submit" class="button button-medium " value="Next" ng-disabled="Waiting"/>
                    <img src="@Model.CdnBaseUrl/ajax-loader.gif" ng-cloak ng-show="Waiting" />
                </div>
            </div>

        </script>

        <ng-view autoscroll="true"></ng-view>
       
        <div ng-show="AccountInformationChangeForm.$submitted && !AccountInformationChangeForm.$valid" ng-cloak>
            <div class="medium-12 columns ">
                <div class="formalert">
                    <p>Please, correct or complete all red highlighted fields before selecting Next</p>
                </div>
            </div>
        </div>
    </fieldset>
</form>
</div>

</section>


<section class="row ruled">

</section>

@section scripts {
<script type="text/javascript">
    angular.module('ApplicationStatusModule')
        .config(['$routeProvider', function ($routeProvider) {
            $routeProvider
                .when('/StepDeposit', { templateUrl: 'StepDeposit' })
                .when('/StepPayment', { templateUrl: 'StepPayment' })
                .when('/StepBothSame', { templateUrl: 'StepBothSame' })
                .when('/StepBothDifferent', { templateUrl: 'StepBothDifferent' })
                .when('/StepChoose', { templateUrl: 'StepChoose' })
                .when('/StepVerify', { templateUrl: 'StepVerify' })
                .otherwise({ templateUrl: 'StepVerify' });
        }]);


    angular.module('ApplicationStatusModule')
        .controller('AccountInformationChangeController', function ($scope, $http, $location, $window) {
            $scope.Model = {
                AccountAction: false,
                FundingAccount: {
                    AuthorizedSigner: '@Model.GetAuthorizedSigner()'
                },
                PaymentAccount: {
                    AuthorizedSigner: '@Model.GetAuthorizedSigner()'
                },
                BrokerageAccount: {
                    AuthorizedSigner: '@Model.GetAuthorizedSigner()'
                },
                FundingDate: '@Model.FundingDateText',
                IsWire: @Model.IsWire.ToString().ToLower()
            };

            $scope.displayAccountAction = function () {
                if (!$scope.Model.AccountAction) {
                    $location.path('/StepChoose');
                    return;
                }
                $scope.AccountInformationChangeForm.$submitted = false;
                $('form[name=AccountInformationChangeForm]').removeClass('ng-submitted');
                $scope.ErrorMessage = null;
                $location.path('/' + $scope.Model.AccountAction);
                return;
            };
            $scope.validateSecurityInfo = function () {
                $scope.Waiting = true;
                $http.post('/AppStatus/PreFunding/ValidateSecurityAnswer', { SecurityAnswer: $scope.Model.SecurityQuestionAnswer })
                    .success(function (data) {
                        if (data && data.Success) {
                            $scope.Waiting = false;
                            passedSecurityCheck = true;
                            $scope.ErrorMessage = null;
                            @if (Model.GetPaymentMethod() == FirstAgain.Domain.Lookups.FirstLook.PaymentTypeLookup.PaymentType.Invoice)
                            {
                                @:$scope.Model.AccountAction = 'StepDeposit';
                                @:$location.path('/StepDeposit');
                            } 
                            else
                            {
                                @:$location.path('/StepChoose');
                            }
                        } else {
                            $scope.Waiting = false;
                            $scope.ErrorMessage = 'The information entered is invalid. Please review and re-enter your security answer. ';
                            $($scope.AccountInformationChangeForm.SecurityQuestionAnswer).css('border', '1px solid red');
                        }
                    });
            };
            $scope.$watch('Model.FundingAccount.RoutingNumber', function (newValue, oldValue) {
                if (newValue && newValue !== oldValue) {
                    $http
                        .post('/services/BankingInformation', {
                            routingNumber: $scope.Model.FundingAccount.RoutingNumber
                        })
                        .success(function (data, status, headers, config) {
                            if (data && data.BankName && $scope.Model.BrokerageAccount) {
                                $scope.Model.BrokerageAccount.BeneficiaryBankName = data.BankName.substring(0, 17);
                            }
                        });
                }
            });

            // requirements madness - to display fields twice. And mirror them. Really.
            $scope.$watch('Model.BrokerageAccount.BeneficiaryRoutingNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.FundingAccount.RoutingNumber = newValue;
                }
            });
            $scope.$watch('Model.BrokerageAccount.BeneficiaryAccountNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.FundingAccount.AccountNumber = newValue;
                }
            });
            $scope.$watch('Model.BrokerageAccount.BeneficiaryConfirmAccountNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.FundingAccount.ConfirmAccountNumber = newValue;
                }
            });
            $scope.$watch('Model.FundingAccount.RoutingNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.BrokerageAccount.BeneficiaryRoutingNumber = newValue;
                }
            });
            $scope.$watch('Model.FundingAccount.AccountNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.BrokerageAccount.BeneficiaryAccountNumber = newValue;
                }
            });
            $scope.$watch('Model.FundingAccount.ConfirmAccountNumber', function (newValue, oldValue) {
                if (newValue !== oldValue && $scope.Model.BrokerageAccount && $scope.Model.FundingAccount) {
                    $scope.Model.BrokerageAccount.BeneficiaryConfirmAccountNumber = newValue;
                }
            });

            $scope.onSubmit = function () {
                if (!$scope.AccountInformationChangeForm.$valid) {
                    $scope.ErrorMessage = 'Please correct any errors below';
                    return;
                }

                $scope.Waiting = true;
                $http.post('/AppStatus/PreFunding/AccountInformationChange', $scope.Model)
                    .success(function (result) {
                        if (result && result.Success) {
                            $scope.ErrorMessage = null;
                            $window.location.href = '/appstatus/refresh';
                        } else {
                            $scope.Waiting = false;
                            $scope.ErrorMessage = result.ErrorMessage;
                        }
                    })
                    .error(function () {
                        $scope.Waiting = false;
                        $scope.ErrorMessage = "We're sorry, but there was an error submitting your changes.";
                    });
                };

                $location.path('/StepVerify');
            });

    SC.prefunding.changeCheckingActInfo();
</script>
}