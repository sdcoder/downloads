@using LightStreamWeb.Models.Test;
@using System.Web.Security.AntiXss

@model XSSTestModel


<h1>XSSTest</h1>

<h2>Array 1</h2>
@foreach (var statement in Model.Statements1)
{
    <p>@Html.Raw(statement)</p>
}
<h2>Array 2</h2>
@foreach (var statement in Model.Statements2)
{
    <p>@Html.Raw(statement)</p>
}
<h2>Array 3</h2>
@foreach (var statement in Model.Statements3)
{
    <p>@Html.Raw(statement)</p>
}

<h2>Basic</h2>
<h4>Dynamic: @Model.Dynamic</h4>
<h4>Static: @XSSTestModel.Static</h4>
<h4>ReadWrite: @Model.ReadWrite</h4>
<h4>Dynamic: @Model.ReadOnly</h4>

<h2>Html.Raw</h2>

<h4>Dynamic: @Html.Raw(Model.Dynamic)</h4> <!-- fail -->

<h4>Static: @Html.Raw(XSSTestModel.Static)</h4>

<h4>ReadWrite: @Html.Raw(Model.ReadWrite)</h4> <!-- fail -->

<h4>ReadOnly: @Html.Raw(Model.ReadOnly)</h4> <!-- fail -->

<h4>ReadOnlyFromCode: @Html.Raw(Model.ReadOnlyToBusinessConstant)</h4>

<h4>Dynamic: @Html.Raw(Model.PublicReadPrivateSet)</h4> <!-- fail -->

<h4>MethodCallToPrivateVariable: @Html.Raw(Model.MethodCallToPrivateVariable())</h4>
<h4>MethodCallToService: @Html.Raw(Model.MethodCallToService())</h4>


<h2>AntiXssEncoder.HtmlEncode</h2>
<h4>Dynamic: @AntiXssEncoder.HtmlEncode(Model.Dynamic, true)</h4>
<h4>Static: @AntiXssEncoder.HtmlEncode(XSSTestModel.Static, true)</h4>
<h4>ReadWrite: @AntiXssEncoder.HtmlEncode(Model.ReadWrite, true)</h4>
<h4>Dynamic: @AntiXssEncoder.HtmlEncode(Model.ReadOnly, true)</h4>


<img src="~/Content/images-v2/sky-smaller.webp" alt="" role="presentation" />