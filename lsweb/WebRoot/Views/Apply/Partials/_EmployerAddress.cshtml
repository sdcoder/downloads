@model FirstAgain.Domain.Lookups.FirstLook.ApplicantTypeLookup.ApplicantType
@{
    int index = 0;
    string idPrefix = "Applicant";
    if (Model == FirstAgain.Domain.Lookups.FirstLook.ApplicantTypeLookup.ApplicantType.Secondary) {
        index = 1;
        idPrefix = "CoApplicant";
    }
}

<div class="row">
	<div class="medium-6 columns">
        <label for="@(idPrefix)EmployerStreetAddress">
            <sup ng-show="employerFieldsRequired(@index)">*</sup>Company Street Address
        </label>
        <input type="text"
               id="@(idPrefix)EmployerStreetAddress" ls-proper-case="true"
               aria-label="Type in @(idPrefix == "CoApplicant" ? "Co Applicant's" : "your") company street address."
               ng-model="LoanApp.Applicants[@index].Occupation.Employer.Address.AddressLine"
               ng-required="employerFieldsRequired(@index)"
               ng-disabled="employerFieldsDisabled(@index)" maxlength="50" />
	</div>
	<div class="medium-2 columns small-6">
        <label for="@(idPrefix)EmployerSecondaryUnitType">
            Suite, etc
        </label>
        @(Html.NgDropDownSelectList(
        "LoanApp.Applicants[" + index + "].Occupation.Employer.Address.SecondaryUnit.Type",
        "Select " + (idPrefix == "CoApplicant" ? "Co Applicant's " : "") + "apartment, suite, unit, or leave blank.",
        idPrefix + "EmployerSecondaryUnitType",
        FirstAgain.Domain.Lookups.FirstLook.PostalAddressSecondaryUnitTypeLookup.GetFilteredBindingSource(FirstAgain.Domain.Lookups.FirstLook.PostalAddressSecondaryUnitTypeLookup.FilterType.Business),
        "LoanApp.Applicants[" + index + "].Occupation.Employer.Address.SecondaryUnit.Value",
        new { @ng_disabled = "employerFieldsDisabled(" + index + ")" }))

	</div>
	<div class="medium-2 columns  medium-pull-2 small-6">
        <label for="@(idPrefix)EmployerSecondaryUnitValue">&nbsp;</label>
        <input type="text"
               id="@(idPrefix)EmployerSecondaryUnitValue"
               aria-label="Enter @(idPrefix == "CoApplicant" ? "Co Applicant's " : "")apartment, suite, or unit number."
               ng-model="LoanApp.Applicants[@index].Occupation.Employer.Address.SecondaryUnit.Value"
               maxlength="6"
               ng-model="LoanApp.Applicants[@index].Occupation.Employer.Address.SecondaryUnit.Value"
               ng-required="LoanApp.Applicants[@index].Occupation.Employer.Address.SecondaryUnit.Type && LoanApp.Applicants[@index].Occupation.Employer.Address.SecondaryUnit.Type != 'NotSelected'"
               ng-disabled="employerFieldsDisabled(@index)" />
	</div>
</div>

<div class="row">
	<div class="medium-6 columns">
        <label for="@(idPrefix)EmployerCity">
            <sup ng-show="employerFieldsRequired(@index)">*</sup>City
        </label>
        <input type="text"
               id="@(idPrefix)EmployerCity" ls-proper-case="true"
               aria-label="Type in @(idPrefix == "CoApplicant" ? "Co Applicant's " : "")company city."
               ng-model="LoanApp.Applicants[@index].Occupation.Employer.Address.City"
               ng-required="employerFieldsRequired(@index)"
               ls-restrict-to-pattern ng-pattern="/^[A-Za-z\' \-/.]+$/"
               ng-disabled="employerFieldsDisabled(@index)" maxlength="50" />
    </div>
	<div class="medium-2 columns">
        <label for="@(idPrefix)EmployerState">
            <sup ng-show="employerFieldsRequired(@index)">*</sup>State
        </label>
        @(Html.NgDropDownSelectList(
                "LoanApp.Applicants[" + index + "].Occupation.Employer.Address.State",
                idPrefix + "EmployerState",
                "Select the state of " + (idPrefix == "CoApplicant" ? "Co Applicant's " : "") + "company location.",
                FirstAgain.Domain.Lookups.FirstLook.StateLookup.GetFilteredBindingSource(FirstAgain.Domain.Lookups.FirstLook.StateLookup.FilterType.Inbusiness),
                "employerFieldsRequired(" + index + ")",
                new { @ng_disabled = "employerFieldsDisabled(" + index + ")" }))
	</div>
	<div class="medium-2 columns  medium-pull-2">
        <label for="@(idPrefix)EmployerZipCode">
            <sup ng-show="employerFieldsRequired(@index)">*</sup>Zip Code
        </label>
        @LSForm.ZipCode(nameAndId: idPrefix + "EmployerZipCode",
                        ngModel: "LoanApp.Applicants[" + index + "].Occupation.Employer.Address.ZipCode",
                        ariaLabel: "Enter your " + (idPrefix == "CoApplicant" ? "Co Applicant's " : "") + "company zip code.",
                        ngRequired: string.Format("employerFieldsRequired({0})", index),
                        ngDisabled: string.Format("employerFieldsDisabled({0})", index))
	</div>
</div>
